{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nnoll/dev/firelist/client/components/editableContainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport EditableBlock from '../editableBlock';\nimport { objectId, setCaretToEnd } from '../../helper';\nimport usePrevious from '../../helper/usePrevious';\n\nvar EditableContainer = function EditableContainer(_ref) {\n  _s();\n\n  var _id = _ref._id,\n      fireType = _ref.fireType,\n      fetchedBlocks = _ref.fetchedBlocks,\n      userId = _ref.userId,\n      err = _ref.err;\n\n  if (err) {\n    return __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, \" Something went wrong\");\n  }\n\n  var _useState = useState(fetchedBlocks),\n      blocks = _useState[0],\n      setBlocks = _useState[1];\n\n  var _useState2 = useState(null),\n      currentBlockId = _useState2[0],\n      setCurrentBlockId = _useState2[1];\n\n  var prevBlocks = usePrevious(blocks);\n\n  if (!blocks) {\n    return __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, \" Something went wrong\");\n  } // update database here if blocks get added or removed\n\n\n  useEffect(function () {\n    var pushBulletsToServer = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(blocks) {\n        var pushBody;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                pushBody = function pushBody() {\n                  if (fireType === \"primaryFire\") {\n                    return {\n                      userId: userId,\n                      primaryFire: blocks\n                    };\n                  }\n\n                  if (fireType === \"secondaryFire\") {\n                    return {\n                      userId: userId,\n                      secondaryFire: blocks\n                    };\n                  }\n\n                  if (fireType === \"dumpsterFire\") {\n                    return {\n                      userId: userId,\n                      dumpsterFire: blocks\n                    };\n                  }\n                };\n\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"\".concat(process.env.SERVER_URL, \"/fires\"), {\n                  method: \"PUT\",\n                  credentials: \"include\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(pushBody())\n                });\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 6]]);\n      }));\n\n      return function pushBulletsToServer(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (prevBlocks && prevBlocks !== blocks) {\n      pushBulletsToServer(blocks);\n    }\n  }, [blocks, prevBlocks]);\n\n  var updateBlockHandler = function updateBlockHandler(currentBlock) {\n    var index = blocks.map(function (b) {\n      return b._id;\n    }).indexOf(currentBlock._id);\n\n    var updatedBlocks = _toConsumableArray(blocks);\n\n    updatedBlocks[index] = _objectSpread(_objectSpread({}, currentBlock[index]), {}, {\n      _id: currentBlock._id,\n      html: currentBlock.html,\n      shot: currentBlock.shot\n    });\n    setBlocks(updatedBlocks);\n  };\n\n  var addBlockHandler = function addBlockHandler(currentBlock) {\n    setCurrentBlockId(currentBlock._id);\n    var newBlock = {\n      _id: objectId(),\n      html: \"\",\n      shot: false\n    };\n    var index = blocks.map(function (b) {\n      return b._id;\n    }).indexOf(currentBlock._id);\n\n    var updatedBlocks = _toConsumableArray(blocks);\n\n    updatedBlocks.splice(index + 1, 0, newBlock);\n    setBlocks(updatedBlocks); // move focus on index+1\n  };\n\n  var deleteBlockHandler = function deleteBlockHandler(currentBlock) {\n    if (blocks.length > 1) {\n      // move focus on index-1\n      var index = blocks.map(function (b) {\n        return b._id;\n      }).indexOf(currentBlock._id);\n\n      var updatedBlocks = _toConsumableArray(blocks);\n\n      updatedBlocks.splice(index, 1);\n      setBlocks(updatedBlocks);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"editableContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, blocks.map(function (block, index) {\n    return __jsx(EditableBlock, {\n      key: block._id,\n      _id: block._id,\n      html: block.html,\n      updateBlock: updateBlockHandler,\n      addBlock: addBlockHandler,\n      deleteBlock: deleteBlockHandler,\n      shot: block.shot,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\n_s(EditableContainer, \"QhrsuputaSWZUDQ78VMAylRFCQQ=\", false, function () {\n  return [usePrevious];\n});\n\n_c = EditableContainer;\nexport default EditableContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableContainer\");","map":{"version":3,"sources":["/Users/nnoll/dev/firelist/client/components/editableContainer/index.js"],"names":["useState","useEffect","EditableBlock","objectId","setCaretToEnd","usePrevious","EditableContainer","_id","fireType","fetchedBlocks","userId","err","blocks","setBlocks","currentBlockId","setCurrentBlockId","prevBlocks","pushBulletsToServer","pushBody","primaryFire","secondaryFire","dumpsterFire","fetch","process","env","SERVER_URL","method","credentials","headers","body","JSON","stringify","console","log","updateBlockHandler","currentBlock","index","map","b","indexOf","updatedBlocks","html","shot","addBlockHandler","newBlock","splice","deleteBlockHandler","length","block"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport EditableBlock from '../editableBlock';\nimport { objectId, setCaretToEnd } from '../../helper';\nimport usePrevious from '../../helper/usePrevious'\n\n\nconst EditableContainer = ({_id, fireType, fetchedBlocks, userId, err}) => {\n  if (err) {\n    return(\n      <h1> Something went wrong</h1>\n    );\n  }\n\n  const [blocks, setBlocks] = useState(fetchedBlocks);\n  const [currentBlockId, setCurrentBlockId] = useState(null);\n\n  const prevBlocks = usePrevious(blocks)\n\n  if (!blocks) {\n    return(\n      <h1> Something went wrong</h1>\n    )\n  }\n\n  // update database here if blocks get added or removed\n  useEffect(() =>{\n    const pushBulletsToServer = async (blocks) => {\n      const pushBody = () => {\n        if(fireType === \"primaryFire\"){\n          return { userId: userId, primaryFire: blocks }\n        }\n        if(fireType === \"secondaryFire\"){\n          return { userId: userId, secondaryFire: blocks }\n        }\n        if(fireType === \"dumpsterFire\"){\n          return { userId: userId, dumpsterFire: blocks }\n        }\n      }\n      try {\n        await fetch (`${process.env.SERVER_URL}/fires`, {\n          method: \"PUT\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(pushBody()),\n        })\n      } catch(err) { console.log(err)}\n    }\n    if (prevBlocks && prevBlocks !== blocks) {\n      pushBulletsToServer(blocks)\n    }\n  }, [blocks, prevBlocks])\n\n  const updateBlockHandler = (currentBlock) => {\n    const index = blocks.map((b) => b._id).indexOf(currentBlock._id)\n    const updatedBlocks = [...blocks]\n    updatedBlocks[index] = {\n      ...currentBlock[index],\n      _id: currentBlock._id,\n      html: currentBlock.html,\n      shot: currentBlock.shot,\n    }\n    setBlocks(updatedBlocks);\n  }\n\n  const addBlockHandler = (currentBlock) => {\n    setCurrentBlockId(currentBlock._id)\n    const newBlock = { _id: objectId(), html: \"\", shot: false}\n    const index = blocks.map((b) => b._id).indexOf(currentBlock._id)\n    const updatedBlocks = [...blocks]\n    updatedBlocks.splice(index+1, 0, newBlock)\n    setBlocks(updatedBlocks)\n    // move focus on index+1\n  }\n\n  const deleteBlockHandler = (currentBlock) => {\n    if (blocks.length > 1) {\n      // move focus on index-1\n      const index = blocks.map((b) => b._id).indexOf(currentBlock._id)\n      const updatedBlocks = [...blocks]\n      updatedBlocks.splice(index, 1)\n      setBlocks(updatedBlocks)\n    }\n  }\n\n  return(\n    <div className=\"editableContainer\">\n      {blocks.map((block, index) => {\n        return(\n          <EditableBlock\n            key={block._id}\n            _id={block._id}\n            html={block.html}\n            updateBlock={updateBlockHandler}\n            addBlock={addBlockHandler}\n            deleteBlock={deleteBlockHandler}\n            shot={block.shot}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default EditableContainer\n"]},"metadata":{},"sourceType":"module"}