{"ast":null,"code":"var _jsxFileName = \"/Users/nnoll/dev/firelist/client/components/editableBlock/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport react from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport styles from './styles.module.scss';\nimport Bullet from '../bullet';\n\nclass EditableBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleHTMLChange = this.handleHTMLChange.bind(this);\n    this.handleShotChange = this.handleShotChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.htmlRef = /*#__PURE__*/react.createRef();\n    this.state = {\n      html: \"\",\n      shot: false,\n      previousKey: null\n    };\n  }\n\n  componentDidMount() {\n    this.htmlRef.current.addEventListener('keydown', this.handleKeyDown);\n    this.htmlRef.current.focus();\n    this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n      html: this.props.html,\n      shot: this.props.shot\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const htmlChanged = prevState.html !== this.state.html;\n    const shotChanged = prevState.shot !== this.state.shot;\n\n    if (htmlChanged || shotChanged) {\n      this.props.updateBlock({\n        _id: this.props._id,\n        html: this.state.html,\n        shot: this.state.shot\n      });\n    }\n  }\n\n  handleHTMLChange(e) {\n    this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n      html: e.target.value\n    }));\n  }\n\n  handleShotChange(shot) {\n    this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n      shot: !shot\n    }));\n  }\n\n  handleKeyDown(e) {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      this.props.addBlock({\n        _id: this.props._id,\n        ref: this.htmlRef.current,\n        html: this.state.html,\n        shot: this.state.shot\n      });\n    } else if (e.key === \"Backspace\" && (this.state.html === \"<br>\" || !this.state.html)) {\n      this.props.deleteBlock({\n        _id: this.props._id,\n        ref: this.htmlRef.current\n      }); // TODO focus previous block\n    }\n\n    this.setState({\n      previousKey: e.key\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: styles.bulletedPoint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, __jsx(Bullet, {\n      shot: this.props.shot,\n      onShotChange: this.handleShotChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), __jsx(ContentEditable, {\n      className: styles.point,\n      innerRef: this.htmlRef,\n      html: this.state.html,\n      onChange: this.handleHTMLChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditableBlock;","map":{"version":3,"sources":["/Users/nnoll/dev/firelist/client/components/editableBlock/index.js"],"names":["react","ContentEditable","styles","Bullet","EditableBlock","React","Component","constructor","props","handleHTMLChange","bind","handleShotChange","handleKeyDown","htmlRef","createRef","state","html","shot","previousKey","componentDidMount","current","addEventListener","focus","setState","componentDidUpdate","prevProps","prevState","htmlChanged","shotChanged","updateBlock","_id","e","target","value","key","preventDefault","addBlock","ref","deleteBlock","render","bulletedPoint","point"],"mappings":"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","sourcesContent":["import react from 'react'\nimport ContentEditable from 'react-contenteditable'\nimport styles from './styles.module.scss'\nimport Bullet from '../bullet'\n\nclass EditableBlock extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleHTMLChange = this.handleHTMLChange.bind(this);\n    this.handleShotChange = this.handleShotChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.htmlRef = react.createRef();\n    this.state = {\n      html: \"\",\n      shot: false,\n      previousKey: null,\n    }\n  }\n\n  componentDidMount() {\n    this.htmlRef.current.addEventListener('keydown', this.handleKeyDown)\n    this.htmlRef.current.focus()\n    this.setState({\n      ...this.state,\n      html: this.props.html,\n      shot: this.props.shot,\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const htmlChanged = prevState.html !== this.state.html\n    const shotChanged = prevState.shot !== this.state.shot\n    if (htmlChanged || shotChanged){\n      this.props.updateBlock({\n        _id: this.props._id,\n        html: this.state.html,\n        shot: this.state.shot,\n      })\n    }\n  }\n\n  handleHTMLChange(e) {\n    this.setState({ ...this.state, html: e.target.value })\n  }\n\n  handleShotChange(shot) {\n    this.setState({ ...this.state, shot: !shot })\n  }\n\n  handleKeyDown(e) {\n    if (e.key === \"Enter\") {\n      e.preventDefault()\n      this.props.addBlock({\n        _id: this.props._id,\n        ref: this.htmlRef.current,\n        html: this.state.html,\n        shot: this.state.shot,\n      })\n    }\n    else if (e.key === \"Backspace\" && (this.state.html === \"<br>\" || !this.state.html)) {\n      this.props.deleteBlock({ _id: this.props._id, ref: this.htmlRef.current })\n      // TODO focus previous block\n    }\n    this.setState({ previousKey: e.key })\n  }\n\n  render() {\n    return (\n      <div className={styles.bulletedPoint}>\n        <Bullet\n          shot={this.props.shot}\n          onShotChange={this.handleShotChange}\n        />\n        <ContentEditable\n          className={styles.point}\n          innerRef={this.htmlRef}\n          html={this.state.html}\n          onChange={this.handleHTMLChange}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default EditableBlock\n"]},"metadata":{},"sourceType":"module"}