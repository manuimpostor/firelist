{"ast":null,"code":"var _jsxFileName = \"/Users/nnoll/dev/firelist/client/components/editableContainer/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport EditableBlock from '../editableBlock';\nimport { objectId, setCaretToEnd } from '../../helper';\nimport usePrevious from '../../helper/usePrevious';\n\nconst EditableContainer = ({\n  _id,\n  fireType,\n  fetchedBlocks,\n  userId,\n  err\n}) => {\n  if (err) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, \" Something went wrong\");\n  }\n\n  const {\n    0: blocks,\n    1: setBlocks\n  } = useState(fetchedBlocks);\n  const {\n    0: currentBlockId,\n    1: setCurrentBlockId\n  } = useState(null);\n  const prevBlocks = usePrevious(blocks); // update database here if blocks get added or removed\n\n  useEffect(() => {\n    const pushBulletsToServer = async blocks => {\n      const pushBody = () => {\n        if (fireType === \"primaryFire\") {\n          return {\n            userId: userId,\n            primaryFire: blocks\n          };\n        }\n\n        if (fireType === \"secondaryFire\") {\n          return {\n            userId: userId,\n            secondaryFire: blocks\n          };\n        }\n\n        if (fireType === \"dumpsterFire\") {\n          return {\n            userId: userId,\n            dumpsterFire: blocks\n          };\n        }\n      };\n\n      try {\n        await fetch('http://localhost:3001/fires', {\n          method: \"PUT\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(pushBody())\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (prevBlocks && prevBlocks !== blocks) {\n      pushBulletsToServer(blocks);\n    }\n  }, [blocks, prevBlocks]);\n\n  const updateBlockHandler = currentBlock => {\n    const index = blocks.map(b => b._id).indexOf(currentBlock._id);\n    const updatedBlocks = [...blocks];\n    updatedBlocks[index] = _objectSpread(_objectSpread({}, currentBlock[index]), {}, {\n      _id: currentBlock._id,\n      html: currentBlock.html,\n      shot: currentBlock.shot\n    });\n    setBlocks(updatedBlocks);\n  };\n\n  const addBlockHandler = currentBlock => {\n    setCurrentBlockId(currentBlock._id);\n    const newBlock = {\n      _id: objectId(),\n      html: \"\",\n      shot: false\n    };\n    const index = blocks.map(b => b._id).indexOf(currentBlock._id);\n    const updatedBlocks = [...blocks];\n    updatedBlocks.splice(index + 1, 0, newBlock);\n    setBlocks(updatedBlocks); // move focus on index+1\n  };\n\n  const deleteBlockHandler = currentBlock => {\n    if (blocks.length > 1) {\n      // move focus on index-1\n      const index = blocks.map(b => b._id).indexOf(currentBlock._id);\n      const updatedBlocks = [...blocks];\n      updatedBlocks.splice(index, 1);\n      setBlocks(updatedBlocks);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"editableContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, blocks.map((block, index) => {\n    return __jsx(EditableBlock, {\n      key: block._id,\n      _id: block._id,\n      html: block.html,\n      updateBlock: updateBlockHandler,\n      addBlock: addBlockHandler,\n      deleteBlock: deleteBlockHandler,\n      shot: block.shot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default EditableContainer;","map":{"version":3,"sources":["/Users/nnoll/dev/firelist/client/components/editableContainer/index.js"],"names":["useState","useEffect","EditableBlock","objectId","setCaretToEnd","usePrevious","EditableContainer","_id","fireType","fetchedBlocks","userId","err","blocks","setBlocks","currentBlockId","setCurrentBlockId","prevBlocks","pushBulletsToServer","pushBody","primaryFire","secondaryFire","dumpsterFire","fetch","method","credentials","headers","body","JSON","stringify","console","log","updateBlockHandler","currentBlock","index","map","b","indexOf","updatedBlocks","html","shot","addBlockHandler","newBlock","splice","deleteBlockHandler","length","block"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport EditableBlock from '../editableBlock';\nimport { objectId, setCaretToEnd } from '../../helper';\nimport usePrevious from '../../helper/usePrevious'\n\n\nconst EditableContainer = ({_id, fireType, fetchedBlocks, userId, err}) => {\n  if (err) {\n    return(\n      <h1> Something went wrong</h1>\n    );\n  }\n\n  const [blocks, setBlocks] = useState(fetchedBlocks);\n  const [currentBlockId, setCurrentBlockId] = useState(null);\n\n  const prevBlocks = usePrevious(blocks)\n\n  // update database here if blocks get added or removed\n  useEffect(() =>{\n    const pushBulletsToServer = async (blocks) => {\n      const pushBody = () => {\n        if(fireType === \"primaryFire\"){\n          return { userId: userId, primaryFire: blocks }\n        }\n        if(fireType === \"secondaryFire\"){\n          return { userId: userId, secondaryFire: blocks }\n        }\n        if(fireType === \"dumpsterFire\"){\n          return { userId: userId, dumpsterFire: blocks }\n        }\n      }\n      try {\n        await fetch ('http://localhost:3001/fires', {\n          method: \"PUT\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(pushBody()),\n        })\n      } catch(err) { console.log(err)}\n    }\n    if (prevBlocks && prevBlocks !== blocks) {\n      pushBulletsToServer(blocks)\n    }\n  }, [blocks, prevBlocks])\n\n  const updateBlockHandler = (currentBlock) => {\n    const index = blocks.map((b) => b._id).indexOf(currentBlock._id)\n    const updatedBlocks = [...blocks]\n    updatedBlocks[index] = {\n      ...currentBlock[index],\n      _id: currentBlock._id,\n      html: currentBlock.html,\n      shot: currentBlock.shot,\n    }\n    setBlocks(updatedBlocks);\n  }\n\n  const addBlockHandler = (currentBlock) => {\n    setCurrentBlockId(currentBlock._id)\n    const newBlock = { _id: objectId(), html: \"\", shot: false}\n    const index = blocks.map((b) => b._id).indexOf(currentBlock._id)\n    const updatedBlocks = [...blocks]\n    updatedBlocks.splice(index+1, 0, newBlock)\n    setBlocks(updatedBlocks)\n    // move focus on index+1\n  }\n\n  const deleteBlockHandler = (currentBlock) => {\n    if (blocks.length > 1) {\n      // move focus on index-1\n      const index = blocks.map((b) => b._id).indexOf(currentBlock._id)\n      const updatedBlocks = [...blocks]\n      updatedBlocks.splice(index, 1)\n      setBlocks(updatedBlocks)\n    }\n  }\n\n  return(\n    <div className=\"editableContainer\">\n      {blocks.map((block, index) => {\n        return(\n          <EditableBlock\n            key={block._id}\n            _id={block._id}\n            html={block.html}\n            updateBlock={updateBlockHandler}\n            addBlock={addBlockHandler}\n            deleteBlock={deleteBlockHandler}\n            shot={block.shot}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default EditableContainer\n"]},"metadata":{},"sourceType":"module"}